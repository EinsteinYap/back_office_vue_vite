full website demo
shopadmin.dishawang.com

backend API 
https://dishaxy.dishait.cn/shopadminapi

----------------------## Initalize and installation ###-------------------

visit https://cn.vuejs.org/

npm config get registry --> register the china server

npm config set registry=https://registry.npmmirror.com

after setup above registry , only can use the vite command
npm init vite@latest shop-admin -- --template vue

install volar extension

install vue3 language extension

install chinese language for vs code extension. 

----------------------## CSS framework ###----------------------------------
https://element-plus.org/en-US/component/button.html
npm install element-plus --save --> for css framework

https://cn.windicss.org/
npm i -D vite-plugin-windicss windicss
must watch the chapter 2 video

after that need go to vite.config.js to import and export it

go main.js import 'virtual:windi.css'

also install windicss extension at the vs code. 

if too many class on html, remember use @apply

example below.
.btn {
  @apply  bg-purple-500 text-indigo-50 px-4 py-2 rounded-full transition-all duration-500 hover:( bg-purple-900) focus:(ring-8 ring-purple-900);
}

--------------------------## Vue Router### ----------------------------------

https://router.vuejs.org/zh/

--------------------------## Element Icons### ----------------------------------

https://element-plus.org/en-US/component/icon.html#register-all-icons

// main.ts

// if you're using CDN, please remove this line.
import * as ElementPlusIconsVue from '@element-plus/icons-vue'

const app = createApp(App)
for (const [key, component] of Object.entries(ElementPlusIconsVue)) {
  app.component(key, component)
}

--------------------------## Vue Use### ----------------------------------

vueuse.org

search for cookies

npm i @vueuse/integrations

npm i universal-cookie@^6

after that import it at the index.vue or other page u need

import { useCookies } from '@vueuse/integrations/useCookies'


--------------------------## Axios intercepter ### -------------------

www.axios-js.com

http://www.axios-js.com/zh-cn/docs/#拦截器

--------------------------## VueX ### ----------------------------------
if vue 2, download vuex 3.x if vue 3, download vuex 4.x
npm install vuex@next


--------------## Vue Router Guard as permission.js ### -----------------

--------------## n Progress ### -----------------
npm i nprogress --> for the global loading on top progress

--------------------- ## add dynamic title on tab --------------------
use the meta in the route index.js file. 

----------------- add dynamic routes !important --------------------
watch course 4-12 根据菜单动态添加路由

----------------- keep alive examples !important --------------------
 <el-main>
                <f-tag-list/>
                <router-view v-slot="{ Component }">
                 <transition name="fade"> advance transition ----> course 4-20  important 
                        <keep-alive :max="10">
                            <component :is="Component"></component>
                        </keep-alive>
                    </transition>
                </router-view>
            </el-main>


----------------- animation dependency --------------------
course 5-3
npm install gsap
is about the number when loading the number got animation. the component is CounTo.vue


----------------- echarts installation --------------------
course 5-5 go visit https://echarts.apache.org/examples/en/index.html, many examples charts 
npm install echarts

course 5-6 bug of after build production 

onBeforeUnmount(()=>{
    if(myChart) echarts.dispose(myChart)
})

must destroy after leave page

chart resize function
const el = ref(null)
useResizeObserver(el, (entries) => myChart.resize())

 ----------------- v-permission !important--------------------

example at the main -->  index.vue

course 5-9 very advance custom v-permission directive

view demo ->  http://shopadmin.dishawang.com/#/access/list
 <IndexChart v-permission="['getStatistics3,GET']"/>

 ----------------- windowHeights and scroll !important--------------------
course 6-1 --very impoprtant to settle scroll overflow
const windowHeight = window.innerHeight || document.body.clientHeight
const h = windowHeight - 64 - 44 - 40
